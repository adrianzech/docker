services:
  database:
    container_name: authentik-database
    image: postgres:17-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${DATABASE_NAME} -U $${DATABASE_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - /opt/docker/appdata/authentik/database:/var/lib/postgresql/data
    networks:
      - authentik
    
  server:
    container_name: authentik-server
    image: beryju/authentik:2024.12.3
    restart: unless-stopped
    command: server
    ports:
      - 9000:9000
      - 9443:9443
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: database
      AUTHENTIK_POSTGRESQL__NAME: ${DATABASE_NAME}
      AUTHENTIK_POSTGRESQL__USER: ${DATABASE_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DATABASE_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
    volumes:
      - /opt/docker/appdata/authentik/media:/media
      - /opt/docker/appdata/authentik/templates:/templates
    networks:
      - proxy
      - authentik
    depends_on:
      - database
      - redis

  worker:
    container_name: authentik-worker
    image: beryju/authentik:2024.12.3
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: database
      AUTHENTIK_POSTGRESQL__NAME: ${DATABASE_NAME}
      AUTHENTIK_POSTGRESQL__USER: ${DATABASE_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DATABASE_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/appdata/authentik/media:/media
      - /opt/docker/appdata/authentik/templates:/templates
      - /opt/docker/appdata/authentik/certs:/certs
    networks:
      - proxy
      - authentik
    depends_on:
      - database
      - redis

  redis:
    container_name: authentik-redis
    image: redis:7.4.2-alpine
    restart: unless-stopped
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - authentik
    volumes:
      - /opt/docker/appdata/authentik/redis:/data

networks:
  proxy:
    external: true
  authentik:
    external: true
